
@{
    ViewBag.Title = "Books";
}


<script src="~/js/view-model/author-popup.js"></script>
<script src="~/js/view-model/book-popup.js"></script>


<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h4 class="title">Books</h4>
                    <p class="category">Available books</p>
                </div>
                <div class="content">
                    <div class="table-responsive">
                        <table id="tableBooks" class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Authors</th>
                                    <th>Published</th>
                                    <th>Pages </th>
                                    <th>Rating</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
@Html.Partial("../Authors/_ModalEdit")
@Html.Partial("_ModalEdit")


<script>
    $(document).ready(function () {
        var table = $('#tableBooks').DataTable({
    proccessing: true,
    serverSide: true,
    ajax: {
        url: "@Url.Action("GetAll", "Books")",
        type: 'POST'
            },
            rowId: 'id',
            stateSave: true,
        language: {
        "search": "",
        "searchPlaceholder": "Search..."
    },
            columns: [
                { data: "id", visible: false },
                { data: "name" },
                { data: "authors" },
       { data: "published" },
       { data: "pages" },
       { data: "rating" },
                { data: null, orderable: false }
            ],
            columnDefs: [
                {
                    "render": function (data, type, row) {
                        return '<a href="#" class="edit"><i class="fa fa-edit" style="color:gray"></i></a>' +
                            '<a href="#" class="remove"><i class="fa fa-remove" style="color:gray"></i></a>';
                    },
                    "targets": 6
                },
                {
                    "render": function (data, type, row) {
                        var maxRating = 10;
                        var html = '';
                        for (var i = 0; i < row.rating; i++) {
                            html += '<i class="fa fa-star" style="color:gray"></i>';
                        }
                        for (var i = 0; i < maxRating - row.rating; i++) {
                            html += '<i class="fa fa-star-o" style="color:gray"></i>';
                        }
                        return html;
                    },
                    "targets": 5
                },
                {
                    "render": function (data, type, row) {
                        
                        if (row.authors.length == 0) return '<span class="label label-danger">not set</span>';
                        var innerHtml = '';
                        for (var i = 0; i < row.authors.length; i++)
                        {
                            var author = row.authors[i];
                            if (author == null) continue;
                            innerHtml += '<a href="#" class="author-edit" id="' + author.id + '">' + author.fullName + '</a>'
                            if (i != row.authors.length - 1) innerHtml += ", ";
                        }
                        return innerHtml;
                    },
                    "targets": 2
                }
                ,
                {
                    "render": function (data, type, row) {
                        var innerHtml = moment(row.published).format("MMM Do YYYY");  ;
                        return innerHtml;
                    },
                    "targets": 3
                }
            ],
            initComplete: function (settings, json) {
                console.log('Table is loaded.');
            },
            fnDrawCallback: function (oSettings) {
                console.log('Table is redrawn.');
                initTableButtons();
            }
        });
    });
    $('#tableBooks').on('fnDrawCallback', function () {
        console.log('Page changed');
        initTableButtons();
    });
    function ShowModalAuthorEdit(entryId) {
        Author.InitVM(entryId);
        $('#modalAuthorEdit').appendTo("body").modal('show');
    }
    function ShowModalBookEdit(bookId) {
        Book.InitVM(bookId);
        $('#modalBookEdit').appendTo("body").modal('show');
    }
    function ShowPromptBookRemove(bookId) {
        bootbox.confirm('Are you sure want to delete this book?', function (result) {
            if (result) {
                Book.Remove(bookId);
            }
        });
    }

    function initTableButtons() {
        $('tr td a.author-edit').click(function () {
            var rowId = $(this).attr('id');
            ShowModalAuthorEdit(rowId);
        });
        $('tr td a.edit').click(function () {
            var rowId = $(this).parent().parent().attr('id');
            ShowModalBookEdit(rowId);
        });
        $('tr td a.remove').click(function () {
            var rowId = $(this).parent().parent().attr('id');
            ShowPromptBookRemove(rowId);
        });
    }
</script>

@model IEnumerable<AuthorVM>

@{
    ViewBag.Title = "Authors";
}

<script src="~/js/view-model/author-popup.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h4 class="title">Authors</h4>
                    <p class="category">Available authors</p>
                </div>
                <div class="content">
                    <div class="table-responsive">
                        <table id="tableAuthors" class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>FullName</th>
                                    <th>Born</th>
                                    <th>Died</th>
                                    <th>Rating</th>
                                    <th>Country</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@Html.Partial("_ModalEdit");

<script>
    $(document).ready(function () {
        var table = $('#tableAuthors').DataTable({
    proccessing: true,
            serverSide: true,
            stateSave: true,
            rowId: 'id',
    ajax: {
        url: "@Url.Action("GetAll", "Authors")",
        type: 'POST'
    },
    language: {
        "search": "",
        "searchPlaceholder": "Search..."
    },
            columns: [
                { data: "id", visible: false },
       { data: "fullName" },
       { data: "born" },
       { data: "died" },
       { data: "rating" },
                { data: "country" },
                { data: null, orderable: false }
            ],
            columnDefs: [
                {
                    "render": function (data, type, row) {
                        return '<a href="#" class="edit"><i class="fa fa-edit" style="color:gray"></i></a>' +
                            '<a href="#" class="remove"><i class="fa fa-remove" style="color:gray"></i></a>';
                    },
                    "targets": 6
                },
                {
                    "render": function (data, type, row) {
                        var maxRating = 5;
                        var html = '';
                        for (var i = 0; i < row.rating; i++) {
                            html += '<i class="fa fa-star" style="color:gray"></i>';
                        }
                        for (var i = 0; i < maxRating - row.rating; i++) {
                            html += '<i class="fa fa-star-o" style="color:gray"></i>';
                        }
                        return html;
                    },
                    "targets": 4
                },
                {
                    "render": function (data, type, row) {
                        return row.died == 0 ? "-" : row.died;
                    },
                    "targets": 3
                }
            ],
            fnDrawCallback: function (oSettings) {
                console.log('Table is redrawn.');
                initTableButtons();
            }
        });


    });

    function initTableButtons() {
        $('tr td a.edit').click(function () {
            var rowId = $(this).parent().parent().attr('id');
            ShowModalAuthorEdit(rowId);
        });
        $('tr td a.remove').click(function () {
            var rowId = $(this).parent().parent().attr('id');
            ShowPromptAuthorRemove(rowId);
        });
        function ShowModalAuthorEdit(authorId) {
            Author.InitVM(authorId);
            $('#modalAuthorEdit').appendTo("body").modal('show');
        }
        function ShowPromptAuthorRemove(authorId) {
            bootbox.confirm('Are you sure want to delete this author?', function (result) {
                if (result) {
                    Author.Remove(authorId);
                }
            });
        }
    }

</script>
